// 构建现代WebApplication时，webpack或者rollup等打包工具会获取应用程序的源代码，并将其打包成一个或者多个包。当用户访问网站时，系统会请求并加载包，以便将数据显示在用户的屏幕上。

// V8引擎等js引擎会在加载时解析和编译用户请求的数据。对于开发人员来说，需要优化这个过程成中的记载时间和请求数据的执行时间，我们希望可以缩短执行时间，以防止阻塞主线程。

// 如何尽快的向用户展示数据呢?
// 很直观地方法就是将巨大的包bundle拆分成较小的包，避免请求一个含有非必要代码的巨型包。


// 通过对application进行bundle-spliting可以减少加载，处理和执行包所需要的时间。
// 通过减少加载和执行时间，我们可以极大减少首屏绘制时间以及在屏幕上渲染最大组件所需要的时间。

// 更大的包不一定意味着更长的执行时间.我们可能会加载大量用户根本不会用到的代码！也许包中的某些部分只会在特定的用户交互中执行，而用户可能会也可能不会执行！

// 在用户能在屏幕看到内容之前，引擎仍然必须加载，解析和编译在初始渲染时甚至未使用的代码。
// 所以获取非必要的大的包会损害性能

// 尽管引擎仅使用了文件的最后部分，但第一部分仍必须加载和处理。我们可以将这些代码与呈现初始页面所需的代码分开，而不是最初请求当前导航中优先级不高的代码部分。

